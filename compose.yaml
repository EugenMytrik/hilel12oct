# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    secrets:
      - db-password
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@broker:5672/
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
      - POSTGRES_DB=example
    depends_on:
      - run_db_migrations
      - celery_worker
    build:
      context: .
    ports:
      - 8000:8000

  run_db_migrations:
    secrets:
      - db-password
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@broker:5672/
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
      - POSTGRES_DB=example
    depends_on:
      db:
        condition: service_healthy
      broker:
        condition: service_healthy
    build:
      context: .
    command: "python /app/manage.py migrate"

  celery_worker:

    secrets:
      - db-password
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@broker:5672/
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
      - POSTGRES_DB=example
    depends_on:
      db:
        condition: service_healthy
      broker:
        condition: service_healthy
    build:
      context: .
    command: "celery -A hilel12 worker -l info"

  celery_beat:
    user: appuser
    secrets:
      - db-password
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@broker:5672/
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
      - POSTGRES_DB=example
    depends_on:
      - celery_worker
    build:
      context: .
    command: "celery -A hilel12 beat -l info -S django"

  broker:
    image: "rabbitmq:3"
    ports:
      - 5672:5672
    healthcheck:
        test: [ "CMD", "rabbitmqctl", "status" ]
        interval: 10s
        timeout: 5s
        retries: 5

  db:
    image: postgres
    restart: always
    user: postgres
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=example
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  db-data:
secrets:
  db-password:
    file: db/password.txt
